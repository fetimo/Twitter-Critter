<div id="content">
	#{flashbox}
<?r unless @critter.nil? ?>
	<?r #flash.delete(:Fisticuffs) ?>
	<div class="preloader_container"><img class="loader" src="../images/spinner.gif"></div>
	<canvas id="your-critter" class="critter_container" width="1000" height="430">Critter requires canvas, upgrade to a nice browser.</canvas>
	<section class="weapon_selection">
		<ul>
			<li><img name="3" src="../images/weapons/1.png">Rock</li>
			<li><img name="2" src="../images/weapons/2.png">Paper</li>
			<li><img name="1" src="../images/weapons/3.png">Scissors</li>
		</ul>
	</section>
</div>
	<?r if session[:access_token] and @username === session[:access_token].params[:screen_name] ?>
	<?r if flash[:Fisticuffs] and flash[:Fisticuffs].include? 'win' 
			uid = session[:access_token].params[:user_id]
			begin
				you = DB[:battle_system].filter(:uid => uid).first
				@opp_attribs = DB[:critters].filter(:uid => you[:opponent]).select(:arms, :eye_colour, :ears, :mouth, :legs, :face, :hands, :nose, :body_colour, :body, :body_type, :accessory).first #=> returns hash of attributes
				?> <ul id="attributes"> <?r
				@opp_attribs.each do |r| ?>
				
					#{ render_partial :attribute, { :attribute=>r[0].to_s, :value=>r[1] } }
				<?r
				end
			rescue => e
				message = e.message
				?> <h1>#{message}</h1> <?r
			end
		end ?>
				</ul>
<div class="friends_tab">
	<ul>
		<li><a id="fisticuffs" href="#">Fisticuffs</a></li>
		<li><a id="hug" href="#">Hug</a></li>
	</ul>
</div>
<section class="friends">
		<?r if session[:friends].count > 4 ?>
	<div id="left_scroll"><img src="../images/back.png" alt="Backwards"></div>
		<?r end ?>
	<div id="carousel_inner">  
    	<ul> 
			<?r session[:friends].sort.each do |f| #from http://blog.xambr.com/2009/11/26/ramaze-partials-with-etanni/ ?>
		    	#{ render_partial :friend, { :friend=>f } }
			<?r end ?>
			<?r if @suggested_friend ?>
				<p>You look a bit lonely,<br>why not make a Critter for <a href="/user/#{@suggested_friend['username']}">#{@suggested_friend['name']}</a>?</p>
			<?r end ?>
		</ul>
	</div>
		<?r if session[:friends].count > 4 ?>
	<div id='right_scroll'><img src="../images/next.png" alt="Forwards"></div>
		<?r end ?>
</section>
	<?r end ?>
<!-- libraries -->
#{js('jquery')}
#{js('easel/lib/easel')}
#{js('easel/src/easeljs/filters/Filter')}
#{js('easel/src/easeljs/filters/ColorFilter')}
#{js('jquery-ui')}
#{js('underscore')}
#{js('backbone')}
<!-- app logic -->
#{js('carousel')}
#{js('animation')}
#{js('your-critter')}
<script>
/*
	Setup Critter model, url defaults to the username requested
*/
var Critter = Backbone.Model.extend({
	initialize: function (username) {
		this.fetch({url:'../api/critters/'+username});
	}
});
var	your_critter = new Critter('#{@username}'),
	elem = document.getElementById('your-critter'),
	stage = new Stage(elem),
	friend_stage = new Stage(elem);
friend_stage.autoClear = false;
build(your_critter);
if (document.getElementById('flash_fisticuffs')) {
	var str = document.getElementById('flash_fisticuffs').innerHTML;
	var strings = str.split(' ');
	var friend = new Critter (strings[0]);
	//critter_container2 = new Container();
}

/* ==========================================================
 * bootstrap-alert.js v2.0.2
 * http://twitter.github.com/bootstrap/javascript.html#alerts
 * ==========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function( $ ){

  "use strict"

 /* ALERT CLASS DEFINITION
  * ====================== */

  var dismiss = '[data-dismiss="alert"]'
    , Alert = function ( el ) {
        $(el).on('click', dismiss, this.close)
      }

  Alert.prototype = {

    constructor: Alert

  , close: function ( e ) {
      var $this = $(this)
        , selector = $this.attr('data-target')
        , $parent

      if (!selector) {
        selector = $this.attr('href')
        selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
      }

      $parent = $(selector)
      $parent.trigger('close')

      e && e.preventDefault()

      $parent.length || ($parent = $this.hasClass('alert') ? $this : $this.parent())

      $parent
        .trigger('close')
        .removeClass('in')

      function removeElement() {
        $parent
          .trigger('closed')
          .remove()
      }

      $.support.transition && $parent.hasClass('fade') ?
        $parent.on($.support.transition.end, removeElement) :
        removeElement()
    }

  }


 /* ALERT PLUGIN DEFINITION
  * ======================= */

  $.fn.alert = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('alert')
      if (!data) $this.data('alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.alert.Constructor = Alert


 /* ALERT DATA-API
  * ============== */

  $(function () {
    $('body').on('click.alert.data-api', dismiss, Alert.prototype.close)
  })

}( window.jQuery );
</script>
#{js('friends')}
<?r else ?>
<p>No Critter called #{@username} exists yet! You can <a href="/user/#{@username}">give life to it though</a>.</p>
<?r end ?>